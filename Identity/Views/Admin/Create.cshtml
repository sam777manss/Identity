@model User
@{
    ViewData["Title"] = "SignUp";
}
  
<h1 class="bg-info text-white">Create User</h1>

  
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @*@Html.LabelFor(model => model.First_Name, htmlAttributes: new { @class = "control-label col-md-2" })*@
            @Html.Label("First_Name","First Name")
            <div class="col-md-6">
                @Html.EditorFor(model => model.First_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.First_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Last_Name, htmlAttributes: new { @class = "control-label col-md-2" })*@
            @Html.Label("Last_Name","Last Name")
            <div class="col-md-6">
                @Html.EditorFor(model => model.Last_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Last_Name, "", new { @class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger"})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger"})
            </div>
        </div>
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
        <div class="container">
            <div class="row">
             <div class="col-xs-12  col-sm-6">
            <div class="row">
                <div class="col-xs-12 col-sm-4 radio-inline">
                @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })*@
                @Html.RadioButtonFor(model => model.Gender, "Male")
                Male
                @*@Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger " })*@
                </div>
                 <div class="col-xs-12 col-sm-4" radio-inline>
                @Html.RadioButtonFor(model => model.Gender, "Female")
                Female
                @*@Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })*@
                </div>
                 <div class="col-xs-12 col-sm-4 radio-inline">
                @Html.RadioButtonFor(model => model.Gender, "Other")
                Other
                @*@Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })*@
                </div>
            </div>
        </div>
        </div>
    </div>
        @Html.Label("Hobbies")
        <div class=container>
            <div class="row">
                <div class="col-xs-12  col-sm-6">
                    <div class="row">
                        <div class="col-xs-12 col-sm-4 radio-inline">
                        @Html.CheckBoxFor(m => m.Hobbies_Football, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Hobbies_Football, "", new { @class = "text-danger"})
                        @Html.Label("Hobbies_Football","Hobbies Football")
                        
                        @*@Html.LabelFor(model => model.Hobbies_Football, htmlAttributes: new { @class = "control-label col-xs-4" }) *@
                    </div>
                        <div class="col-xs-12 col-sm-4 radio-inline">
                        @Html.CheckBoxFor(m => m.Hobbies_Dance, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Hobbies_Dance, "", new { @class = "text-danger"})
                        @Html.Label("Hobbies_Dance","Hobbies Dance")
                        
                        @*@Html.LabelFor(model => model.Hobbies_Dance, htmlAttributes: new { @class = "control-label col-xs-4" })*@
                    </div>
                        <div class="col-xs-12 col-sm-4 radio-inline">
                        @Html.CheckBoxFor(m => m.Hobbies_Cricket, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Hobbies_Cricket, "", new { @class = "text-danger"})
                        @Html.Label("Hobbies_Cricket","Hobbies Cricket")
                        
                        @*@Html.LabelFor(model => model.Hobbies_Cricket, htmlAttributes: new { @class = "control-label col-xs-4" })*@
                    </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>

    </div>
}